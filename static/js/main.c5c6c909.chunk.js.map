{"version":3,"sources":["layout/Sider.jsx","pages/home/index.jsx","pages/brainfuck/BrainfuckTextCard.jsx","pages/brainfuck/index.jsx","pages/pixelart/pixel.jsx","pages/pixelart/index.jsx","routes/Routes.jsx","App.jsx","index.jsx"],"names":["Content","Layout","Sider","SiderComponent","children","useState","collapsed","setCollapsed","history","useHistory","style","height","collapsible","onCollapse","collapse","theme","mode","onClick","key","push","Item","HomeOutlined","ExperimentOutlined","AppstoreOutlined","margin","data-testid","TextArea","Input","BrainfuckTextCard","title","value","onChange","disabled","placeholder","bodyStyle","headStyle","textAlign","className","autoSize","minRows","e","target","defaultProps","propTypes","string","code","setCode","translation","setTranslation","unfilteredCode","filteredCode","replace","pointer","array","text","brackets","currentPositionCode","length","String","fromCharCode","type","Pixel","color","index","onMouseDown","onHover","testid","backgroundColor","onMouseOver","r","g","b","a","rgba","setRgba","Array","from","fill","pixelGrid","setPixelGrid","isPainting","setIsPainting","changePixelColor","newPixelGrid","JSON","parse","stringify","handleMouseDown","handleHover","pixelArray","map","pixel","onMouseUp","draggable","onDragStart","event","rgb","path","component","Brainfuck","Pixelart","Home","App","basename","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5c6c909.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { ExperimentOutlined, HomeOutlined, AppstoreOutlined } from '@ant-design/icons';\nimport propTypes from 'proptypes';\nimport { useHistory } from 'react-router-dom';\n\nconst { Content, Sider } = Layout;\n\nconst SiderComponent = ({ children }) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const history = useHistory();\n\n    const onCollapse = (collapse) => {\n        setCollapsed(collapse);\n    };\n\n    const onSelectMenu = ({ key }) => {\n        switch (key) {\n            case '2':\n                history.push('/brainfuck');\n                break;\n            case '3':\n                history.push('/pixelart');\n                break;\n            default:\n                history.push('/');\n        }\n    };\n\n    return (\n        <Layout style={{ height: '100vh' }}>\n            <Sider collapsed={collapsed} collapsible onCollapse={onCollapse}>\n                <Menu theme=\"dark\" mode=\"inline\" onClick={onSelectMenu}>\n                    <Menu.Item key=\"1\">\n                        <HomeOutlined />\n                        <span>home.js</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\">\n                        <ExperimentOutlined />\n                        <span>Brainfuck.js</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"3\">\n                        <AppstoreOutlined />\n                        <span>Pixelart.js</span>\n                    </Menu.Item>\n                </Menu>\n            </Sider>\n            <Layout>\n                <Content style={{ margin: '0 16px' }}>\n                    {children}\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nSiderComponent.propTypes = {\n    children: propTypes.node.isRequired,\n};\n\nexport default SiderComponent;\n","import React from 'react';\n\nexport default () => (\n    <div data-testid=\"home-page\">\n        Home\n    </div>\n);\n","import React from 'react';\nimport propTypes from 'proptypes';\nimport { Card, Input } from 'antd';\n\nconst { TextArea } = Input;\n\nconst BrainfuckTextCard = ({\n    title,\n    value,\n    onChange,\n    disabled,\n    placeholder,\n}) => (\n    <Card title={title} bodyStyle={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <div className=\"text-container\">\n            <TextArea\n                placeholder={placeholder}\n                className=\"textarea-input\"\n                value={value}\n                autoSize={{ minRows: 10 }}\n                onChange={(e) => onChange(e.target.value)}\n                disabled={disabled}\n            />\n        </div>\n    </Card>\n);\n\nBrainfuckTextCard.propTypes = {\n    title: propTypes.string,\n    value: propTypes.string,\n    onChange: propTypes.func,\n    disabled: propTypes.bool,\n    placeholder: propTypes.string,\n};\n\nBrainfuckTextCard.defaultProps = {\n    title: '',\n    value: '',\n    onChange: () => {},\n    disabled: false,\n    placeholder: propTypes.string,\n};\n\nexport default BrainfuckTextCard;\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\n\nimport BrainfuckTextCard from './BrainfuckTextCard';\n\nimport './index.css';\n\nexport default () => {\n    const [code, setCode] = useState('');\n    const [translation, setTranslation] = useState('');\n\n    const filterCode = (unfilteredCode) => {\n        const filteredCode = unfilteredCode.replace(/[^.[\\] +\\-><\\n]/g, '');\n        setCode(filteredCode);\n    };\n\n    const translateCode = () => {\n        const filteredCode = code.replace(/[ \\n]/g, '');\n        let pointer = 0;\n        const array = [0];\n        let text = '';\n        let brackets = 0;\n        let currentPositionCode = 0;\n\n        while (currentPositionCode < filteredCode.length) {\n            switch (filteredCode[currentPositionCode]) {\n                case '.':\n                    text += String.fromCharCode(array[pointer]);\n                    break;\n                case '[':\n                    if (array[pointer] === 0) {\n                        currentPositionCode += 1;\n                        while (filteredCode[currentPositionCode] !== ']' || brackets !== 0) {\n                            if (filteredCode[currentPositionCode] === '[') {\n                                brackets += 1;\n                            }\n                            if (filteredCode[currentPositionCode] === ']') {\n                                brackets -= 1;\n                            }\n                            currentPositionCode += 1;\n                        }\n                    }\n                    break;\n                case ']':\n                    if (array[pointer] !== 0) {\n                        currentPositionCode -= 1;\n                        while (filteredCode[currentPositionCode] !== '[' || brackets !== 0) {\n                            if (filteredCode[currentPositionCode] === ']') {\n                                brackets += 1;\n                            }\n                            if (filteredCode[currentPositionCode] === '[') {\n                                brackets -= 1;\n                            }\n                            currentPositionCode -= 1;\n                        }\n                    }\n                    break;\n                case '+':\n                    if (array[pointer] === 255) {\n                        array[pointer] = -1;\n                    }\n                    array[pointer] += 1;\n                    break;\n                case '-':\n                    if (array[pointer] === 0) {\n                        array[pointer] = 256;\n                    }\n                    array[pointer] -= 1;\n                    break;\n                case '>':\n                    pointer += 1;\n                    if (!array[pointer]) {\n                        array.push(0);\n                    }\n                    break;\n                case '<':\n                    if (pointer > 0) {\n                        pointer -= 1;\n                    }\n                    break;\n                default:\n            }\n            currentPositionCode += 1;\n        }\n\n        setTranslation(text);\n    };\n\n    return (\n        <div className=\"app\" data-testid=\"brainfuck-page\">\n            <BrainfuckTextCard disabled={false} value={code} onChange={filterCode} title=\"Code\" placeholder=\"Insert brainfuck code here\" />\n            <Button className=\"translate-button\" onClick={translateCode} type=\"primary\">\n                Translate -&gt;\n            </Button>\n            <BrainfuckTextCard disabled value={translation} title=\"Translation\" placeholder=\"Translation here\" />\n        </div>\n    );\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/mouse-events-have-key-events */\nimport React from 'react';\nimport propTypes from 'proptypes';\n\nimport './pixel.css';\n\nconst Pixel = ({\n    color,\n    index,\n    onMouseDown,\n    onHover,\n    testid,\n}) => (\n    <div\n        className=\"pixel\"\n        data-testid={testid}\n        style={{\n            backgroundColor: color,\n        }}\n        onMouseDown={() => onMouseDown(index)}\n        onMouseOver={() => onHover(index)}\n    />\n);\n\nPixel.propTypes = {\n    color: propTypes.string,\n    index: propTypes.number.isRequired,\n    onMouseDown: propTypes.func,\n    onHover: propTypes.func,\n    testid: propTypes.string,\n};\n\nPixel.defaultProps = {\n    color: '',\n    onMouseDown: () => {},\n    onHover: () => {},\n    testid: null,\n};\n\nexport default Pixel;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport Pixel from './pixel';\nimport './index.css';\n\nexport default () => {\n    const [rgba, setRgba] = useState({\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1,\n    });\n\n    const [pixelGrid, setPixelGrid] = useState(Array.from(Array(256)).fill({\n        r: 0, g: 0, b: 0, a: 0,\n    }));\n    const [isPainting, setIsPainting] = useState(false);\n\n    const changePixelColor = (index) => {\n        const newPixelGrid = JSON.parse(JSON.stringify(pixelGrid));\n        newPixelGrid[index] = rgba;\n        setPixelGrid(newPixelGrid);\n    };\n\n    const handleMouseDown = (index) => {\n        setIsPainting(true);\n        changePixelColor(index);\n    };\n\n    const handleHover = (index) => {\n        if (isPainting) {\n            changePixelColor(index);\n        }\n    };\n\n    const pixelArray = pixelGrid.map(\n        (pixel, index) => (\n            <Pixel\n                key={index}\n                color={`rgba(${pixel.r},${pixel.g},${pixel.b},${pixel.a})`}\n                index={index}\n                onHover={handleHover}\n                onMouseDown={handleMouseDown}\n            />\n        ),\n    );\n\n    const handleMouseUp = () => {\n        setIsPainting(false);\n    };\n\n    const chooseColor = (event) => {\n        setRgba(event.rgb);\n    };\n\n    return (\n        <div\n            data-testid=\"pixelart-page\"\n            onMouseUp={handleMouseUp}\n            draggable={false}\n            onDragStart={() => false}\n            className=\"pixelart-body\"\n        >\n            <div className=\"pixel-grid\">\n                {\n                    pixelArray\n                }\n            </div>\n            <ChromePicker onChange={chooseColor} color={rgba} />\n        </div>\n    );\n};\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport Home from '../pages/home';\nimport Brainfuck from '../pages/brainfuck';\nimport Pixelart from '../pages/pixelart';\n\nexport default () => (\n    <Switch>\n        <Route path=\"/brainfuck\" component={Brainfuck} />\n        <Route path=\"/pixelart\" component={Pixelart} />\n        <Route path=\"/\" component={Home} />\n    </Switch>\n);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Sider from './layout/Sider';\nimport Routes from './routes/Routes';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <BrowserRouter basename=\"/myPortfolioSite\">\n            <Sider>\n                <Routes />\n            </Sider>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}